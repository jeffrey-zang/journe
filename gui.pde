/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void TextBoxChange(GTextField source, GEvent event) { //_CODE_:TextBox:338386:

  if(event == GEvent.ENTERED && !(TextBox.getText().equals(" ")) ) {   
    msgs.add(new Message(
      TextBox.getText()
    ));
    messages.setTextAlign(GAlign.RIGHT,null);

    messageString = "";
    for (int i = 0; i < msgs.size(); i++) {
      messageString += msgs.get(i).content + "\n";
    }
    messages.setText(messageString);
    TextBox.setText("");
    log = split(messageString, "\n");
    // Writes the strings to a file, each on a separate line
    saveStrings("data/messages.txt", log);
  }
} //_CODE_:TextBox:338386:

public void goMessage(GButton source, GEvent event) { //_CODE_:messageTab:576134:
   TextBox.setVisible(true);
   messages.setVisible(true);

  println("messageTab - GButton >> GEvent." + event + " @ " + millis());

} //_CODE_:messageTab:576134:

public void goSettings(GButton source, GEvent event) { //_CODE_:SettingsTab:776413:
TextBox.setVisible(false);
   messages.setVisible(false);
  println("SettingsTab - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:SettingsTab:776413:

public void goStats(GButton source, GEvent event) { //_CODE_:StatsTab:339897:
  TextBox.setVisible(false);
   messages.setVisible(false);

  println("StatsTab - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:StatsTab:339897:

public void messageschange(GTextArea source, GEvent event) { //_CODE_:messages:510315:
  println("messages - GTextArea >> GEvent." + event + " @ " + millis());
} //_CODE_:messages:510315:

public void clearData(GButton source, GEvent event) { //_CODE_:databutton:801346:
  println("databutton - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:databutton:801346:

public void button1_click1(GButton source, GEvent event) { //_CODE_:button1:891406:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:button1:891406:

public void PTimeChange(GCustomSlider source, GEvent event) { //_CODE_:PromptTime:882198:
  println("PromptTime - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:PromptTime:882198:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("JournE");
  TextBox = new GTextField(this, 0, 600, 300, 60, G4P.SCROLLBARS_NONE);
  TextBox.setPromptText("Press here to send a message...");
  TextBox.setOpaque(true);
  TextBox.addEventHandler(this, "TextBoxChange");
  messageTab = new GButton(this, 0, 0, 100, 30);
  messageTab.setText("Messages");
  messageTab.addEventHandler(this, "goMessage");
  SettingsTab = new GButton(this, 200, 0, 100, 30);
  SettingsTab.setText("Settings");
  SettingsTab.addEventHandler(this, "goSettings");
  StatsTab = new GButton(this, 100, 0, 100, 30);
  StatsTab.setText("Stats");
  StatsTab.addEventHandler(this, "goStats");
  messages = new GTextArea(this, 0, 30, 300, 570, G4P.SCROLLBARS_VERTICAL_ONLY);
  messages.setOpaque(true);
  messages.addEventHandler(this, "messageschange");
  databutton = new GButton(this, 0, 50, 100, 30);
  databutton.setText("Clear Data");
  databutton.setLocalColorScheme(GCScheme.RED_SCHEME);
  databutton.addEventHandler(this, "clearData");
  button1 = new GButton(this, 0, 110, 100, 30);
  button1.setText("Set Keywords");
  button1.addEventHandler(this, "button1_click1");
  PromptTime = new GCustomSlider(this, 0, 190, 300, 50, "grey_blue");
  PromptTime.setShowValue(true);
  PromptTime.setShowLimits(true);
  PromptTime.setLimits(8, 0, 24);
  PromptTime.setShowTicks(true);
  PromptTime.setNumberFormat(G4P.INTEGER, 0);
  PromptTime.setOpaque(false);
  PromptTime.addEventHandler(this, "PTimeChange");
  label1 = new GLabel(this, 0, 160, 100, 30);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Prompt Time");
  label1.setOpaque(false);
}

// Variable declarations 
// autogenerated do not edit
GTextField TextBox; 
GButton messageTab; 
GButton SettingsTab; 
GButton StatsTab; 
GTextArea messages; 
GButton databutton; 
GButton button1; 
GCustomSlider PromptTime; 
GLabel label1; 
